(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[11],{"9kvl":function(n,t,e){"use strict";var r=e("FfOG");e.d(t,"a",(function(){return r["b"]}));e("bCY9")},afA6:function(n,t,e){"use strict";e.r(t);var r=e("0Owb"),o=e("q1tI"),a=e.n(o),i=e("q3YX"),s=e("9og8"),c=e("WmNS"),p=e.n(c),l=e("LtsZ"),m="import React, { useRef, useEffect } from 'react';\nimport echarts, { ECOption } from '../baseEcharts';\n\nconst Chart: React.FC = () => {\n  const myChart = useRef<any>();\n  const containerRef = useRef<any>(null);\n\n  useEffect(() => {\n    initChart();\n  }, []);\n\n  const initChart = () => {\n    myChart.current = echarts.init(containerRef.current);\n    let dataX = [\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n      'XX\u8857\u9053',\n    ]; //\u540d\u79f0\n    let dataY = [20, 50, 15, 35, 50, 30, 40, 50, 60, 20, 50, 15, 35, 50, 30, 40, 50, 60]; //\u6570\u636e\n    let zoomShow = false;\n    if (dataY.length > 14) {\n      zoomShow = true;\n    } else {\n      zoomShow = false;\n    }\n    let option = {\n      backgroundColor: '#0D2753',\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow',\n        },\n      },\n      title: {\n        text: '\u6807\u9898',\n      },\n      legend: { show: true, data:['legend'] },\n      grid: {\n        top: '10%',\n        right: '5%',\n        left: '5%',\n        bottom: '10%',\n      },\n      xAxis: [\n        {\n          type: 'category',\n          data: dataX,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(66, 192, 255, .3)',\n            },\n          },\n          axisLabel: {\n            interval: 0,\n            margin: 10,\n            color: '#05D5FF',\n            textStyle: {\n              fontSize: 11,\n            },\n            rotate: 45,\n          },\n          axisTick: {\n            //\u523b\u5ea6\n            show: false,\n          },\n        },\n      ],\n      yAxis: [\n        {\n          axisLabel: {\n            padding: [3, 0, 0, 0],\n            formatter: '{value}',\n            color: 'rgba(95, 187, 235, 1)',\n            textStyle: {\n              fontSize: 11,\n            },\n          },\n          axisTick: {\n            show: true,\n          },\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(66, 192, 255, .3)',\n            },\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255,255,255,0)',\n            },\n          },\n        },\n      ],\n      dataZoom: [\n        //\u6eda\u52a8\u6761\n        {\n          show: zoomShow,\n          type: 'slider',\n          realtime: true,\n          startValue: 0,\n          endValue: 14,\n          xAxisIndex: [0],\n          bottom: '10',\n          left: '30',\n          height: 10,\n          borderColor: 'rgba(0,0,0,0)',\n          textStyle: {\n            color: '#05D5FF',\n          },\n        },\n      ],\n      series: [\n        {\n          name:'legend',\n          type: 'bar',\n          data: dataY,\n          barWidth: '10',\n          itemStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(\n                0,\n                0,\n                0,\n                1,\n                [\n                  {\n                    offset: 0,\n                    color: 'rgba(5, 213, 255, 1)', // 0% \u5904\u7684\u989c\u8272\n                  },\n                  {\n                    offset: 0.98,\n                    color: 'rgba(5, 213, 255, 0)', // 100% \u5904\u7684\u989c\u8272\n                  },\n                ],\n                false,\n              ),\n              shadowColor: 'rgba(5, 213, 255, 1)',\n              shadowBlur: 4,\n            },\n          },\n          label: {\n            normal: {\n              show: true,\n              lineHeight: 10,\n              formatter: '{c}',\n              position: 'top',\n              textStyle: {\n                color: '#fff',\n                fontSize: 10,\n              },\n            },\n          },\n        },\n      ],\n    };\n\n    myChart.current && myChart.current.setOption(option, true);\n  };\n\n  return <div ref={containerRef} style={{ width: 600, height: 400 }}></div>;\n};\n\nexport default Chart;",h="import * as echarts from 'echarts/core';\nimport {\n  BarChart,\n  // \u7cfb\u5217\u7c7b\u578b\u7684\u5b9a\u4e49\u540e\u7f00\u90fd\u4e3a SeriesOption\n  BarSeriesOption,\n  LineChart,\n  LineSeriesOption,\n} from 'echarts/charts';\nimport {\n  TitleComponent,\n  // \u7ec4\u4ef6\u7c7b\u578b\u7684\u5b9a\u4e49\u540e\u7f00\u90fd\u4e3a ComponentOption\n  TitleComponentOption,\n  TooltipComponent,\n  TooltipComponentOption,\n  GridComponent,\n  GridComponentOption,\n  // \u6570\u636e\u96c6\u7ec4\u4ef6\n  DatasetComponent,\n  DatasetComponentOption,\n  // \u5185\u7f6e\u6570\u636e\u8f6c\u6362\u5668\u7ec4\u4ef6 (filter, sort)\n  TransformComponent,\n} from 'echarts/components';\nimport { LabelLayout, UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer, SVGRenderer } from 'echarts/renderers';\nimport { XAXisOption, YAXisOption } from 'echarts/types/dist/shared';\nimport { EChartsOption } from 'echarts/types/dist/shared';\n// \u901a\u8fc7 ComposeOption \u6765\u7ec4\u5408\u51fa\u4e00\u4e2a\u53ea\u6709\u5fc5\u987b\u7ec4\u4ef6\u548c\u56fe\u8868\u7684 Option \u7c7b\u578b\n// export type ECOption = echarts.ComposeOption<\n//   | BarSeriesOption\n//   | LineSeriesOption\n//   | TitleComponentOption\n//   | TooltipComponentOption\n//   | GridComponentOption\n//   | DatasetComponentOption\n//   | XAXisOption\n//   | YAXisOption\n// >;\nexport type ECOption = EChartsOption;\n// \u6ce8\u518c\u5fc5\u987b\u7684\u7ec4\u4ef6\necharts.use([\n  TitleComponent,\n  TooltipComponent,\n  GridComponent,\n  DatasetComponent,\n  TransformComponent,\n  BarChart,\n  LabelLayout,\n  UniversalTransition,\n  CanvasRenderer,\n  LineChart,\n  SVGRenderer,\n]);\n\nconst option: ECOption = {\n  // ...\n};\n\nexport default echarts;",u="import React, { useRef, useEffect } from 'react';\nimport echarts from '../baseEcharts';\n\nconst Line: React.FC = () => {\n  const myChart = useRef<any>();\n  const containerRef = useRef<any>(null);\n\n  useEffect(() => {\n    initChart();\n  }, []);\n\n  const initChart = () => {\n    myChart.current = echarts.init(containerRef.current);\n    let option: any = {\n      xAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n      },\n      yAxis: {\n        type: 'value',\n      },\n      series: [\n        {\n          data: [150, 230, 224, 218, 135, 147, 260],\n          type: 'line',\n        },\n      ],\n    };\n    myChart.current && myChart.current.setOption(option, true);\n  };\n\n  return <div ref={containerRef} style={{ width: 600, height: 400 }}></div>;\n};\n\nexport default Line;",d={"echarts-ui-chart":{component:Object(l["dynamic"])({loader:function(){var n=Object(s["a"])(p.a.mark((function n(){return p.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([e.e(2),e.e(6)]).then(e.bind(null,"pdV7"));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function t(){return n.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:m},"baseEcharts/index.ts":{import:"../baseEcharts",content:h}},dependencies:{react:{version:"17.0.2"},echarts:{version:"5.3.1"}},componentName:"Chart",identifier:"echarts-ui-chart"}},"echarts-ui-line":{component:Object(l["dynamic"])({loader:function(){var n=Object(s["a"])(p.a.mark((function n(){return p.a.wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([e.e(2),e.e(5)]).then(e.bind(null,"AsDU"));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function t(){return n.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:u},"baseEcharts/index.ts":{import:"../baseEcharts",content:h}},dependencies:{react:{version:"17.0.2"},echarts:{version:"5.3.1"}},componentName:"Line",identifier:"echarts-ui-line"}}},f=e("x2v5"),C=e("KcUY"),X=e.n(C);t["default"]=n=>a.a.createElement(X.a,Object(r["a"])({},n,{config:i,demos:d,apis:f}))},q3YX:function(n){n.exports=JSON.parse('{"menus":{"en-US":{"/components":[{"title":"\u57fa\u7840\u77e5\u8bc6","path":"/components/demo","meta":{},"children":[{"path":"/components/demo/line","title":"ECharts \u521b\u5efa\u56fe\u8868","meta":{"order":1}},{"path":"/components/demo/chart","title":"ECharts \u7ec4\u6210\u56fe\u8868","meta":{"order":2}}]}],"*":[{"path":"/","title":"Index","meta":{}}]}},"locales":[{"name":"en-US","label":"English"}],"navs":{"en-US":[{"title":"Components","path":"/components"}]},"title":"echarts-ui","logo":"https://user-images.githubusercontent.com/9554297/83762004-a0761b00-a6a9-11ea-83b4-9c8ff721d4b8.png","mode":"site","repository":{"url":"","branch":"master"},"theme":{}}')},x2v5:function(n){n.exports=JSON.parse("{}")}}]);